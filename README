RDMA FTP client (rcftp) and server (rftpd) is a set of tools for high performance data transfer using RDMA technology based on ftp protocol.

New Features
==
* RFTP version information
* support multiple channel data transfer
* support directory hierarchy transfer
* support 'rmput'
* support direct io
* support sendfile, splice
* adjustable reader/writer
* adjustable io depth of send queue and recv queue
* bandwidth monitor

Installation
==
1. If you have installed previous version, please use upgrade command,
 # rpm -Uvh rftpd-0.13-1.x86_64.rpm
 # rpm -Uvh rcftp-0.13-1.x86_64.rpm

2. Comfirm version
 # rpm -qa rcftp rftpd
 rcftp-0.13-1
 rftpd-0.13-1

Configuration
==
* You could copy the sample configration(rcftprc and rftpdrc) files to /etc directory.

* Configuration file lookup:
 load default value
 if (system configuration exist)
     load /etc/rcftprc (client) or /etc/rftpdrc (server)
 if (user specific configuration exist)
     override system configuration with
     $HOME/.rcftprc (client) or $HOME/.rftpdrc (server)

* The application both client and server could be configured with several parameters as follows,

+-------------+----------+--------+--------------------------------+
|   option    |  default |  app   |   description                  |
+-------------+----------+--------+--------------------------------+
| cbufsiz     |  1MB     | rcftp  | circular buffer block size     |
|             |          | rftpd  |                                |
+-------------+----------+--------+--------------------------------+
| cbufnum     |  10      | rcftp  | circular buffer block number   |
|             |          | rftpd  |                                |
+-------------+----------+--------+--------------------------------+
| srvcomport  |  21      | rftpd  | server side communication      |
|             |          |        | channel listening port         |
+-------------+----------+--------+--------------------------------+
| usesendfile |  no      | rcftp  | set 'yes' if you want to use   |
|             |          | rftpd  | sendfile to avoid data copy    |
|             |          |        | between kernel and userspace   |
+-------------+----------+--------+--------------------------------+
| usesplice   |  no      | rcftp  | set 'yes' if you want to take  |
|             |          | rftpd  | advantage of splice to avoid   |
|	      |	         |        | data copy between kernel and   |
|             |          |        | userspace                      |
+-------------+----------+--------+--------------------------------+
| devzerosiz  |  100G    | rcftp  | set /dev/zero size for         |
|             |          | rftpd  | limited data transfer          |
+-------------+----------+--------+--------------------------------+
| rmtaddrnum  |  100     | rcftp  | number of pre-allocated        |
|             |          | rftpd  | remote addr information        |
+-------------+----------+--------+--------------------------------+
| evbufnum    |  100     | rcftp  | number of pre-allocated        |
|             |          | rftpd  | send control messages buf      |
+-------------+----------+--------+--------------------------------+
| recvbufnum  |  100     | rcftp  | number of pre-allocated        |
|             |          | rftpd  | recv control messages buf      |
+-------------+----------+--------+--------------------------------+
| rcstreamnum |  1       | rcftp  | number of parallel data        |
|             |          |        | data channels                  |
+-------------+----------+--------+--------------------------------+
| readernum   |  1       | rcftp  | number of reader               |
|             |          | rftpd  |                                |
+-------------+----------+--------+--------------------------------+
| writernum   |  1       | rcftp  | number of writer               |
|             |          | rftpd  |                                |
+-------------+----------+--------+--------------------------------+
| directio    |  no      | rcftp  | on/off direct IO feature when  |
|             |          | rftpd  |  doing file io                 |
|             |          |        | CHR device like /dev/zero and  |
|             |          |        |  /devnull don't support this   |
+-------------+----------+--------+--------------------------------+
| rdma_qp_sq  |  64      | rcftp  | maximum iodepth of rdma send   |
| _depth      |          | rftpd  | queue                          |
+-------------+----------+--------+--------------------------------+
| rdma_qp_rq  |  64      | rcftp  | maximum iodepth of rdma recv   |
| _depth      |          | rftpd  | queue                          |
+-------------+----------+--------+--------------------------------+


Usage
=====

1. Startup server manually
 # /usr/sbin/rftpd -D &

2. Check the network status
 # netstat -an | grep [port]
 tcp    0   0  0.0.0.0:port           0.0.0.0:*             LISTEN
 
3. Startup client and login to the server
 # /usr/bin/rcftp [server addr] [port]
 ...
 Name: ftp
 Password: ftp

ftp/ftp is a kind of anonymous user/passwd pair, and the server would not set user id and group which makes regular user startup server possible.

4. Change directories
 ftp> lcd [local working directory]
 ftp> cd [remote working directory]

5.1. Transfer data via RDMA
 ftp> rput local-file [ remote-file ]
 ftp> rget remote-file [ local-file ]
 ftp> rmput [[file1] ...] [[dir1] ...]

5.2. Transfer data via RDMA from memory to memory
 ftp> rput /dev/zero /dev/null

5.3. After you set the 'usesplice' or 'usesendfile' as 'yes', the apps will avoid data copy between user space and kernel space
 ftp> put local-file [ remote-file ]

6. Close the connection
 ftp> by
 221 Goodbye.


Issues
======

* splice has higher priority than sendfile. so if 'usesplice' and 'usesendfile' are both set as 'yes', the application will use splice to send data.

* If concurrent clients are wanted, we suggest you could take scripts for convenient to do repeatable task. For example, if you want to transfer some large file, you could do as follows,
 # /root/bin/rcftp -n -i < [script]
 in the script file, you could write some task as you want,
------------
open server-addr port
user username password
bin
prompt
lcd local-dir
cd remote-dir
rput local-file remote-file
bye
------------